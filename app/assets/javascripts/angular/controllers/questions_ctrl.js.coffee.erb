App.controller 'QuestionsCtrl', ['$scope', 'Question', 'Instrument', 'filterFilter', ($scope, Question, Instrument, filterFilter) ->
  $scope.questions = []
  $scope.all_questions = []
  $scope.selectedQuestions = []
  $scope.searchText = ""
  $scope.totalQuestions = 0
  $scope.questionsPerPage = <%= Settings.questions_per_page %>
  $scope.maxNumOfLinks = <%= Settings.maximum_number_of_links %>

  $scope.init = (project_id, instrument_id) ->
    $scope.project_id = project_id
    $scope.instrument_id = instrument_id
    $scope.getQuestionsPerPage(1)
    $scope.all_questions = Question.query({"project_id": project_id, "instrument_id": instrument_id}) #TODO: slows initial request
    $scope.instruments = Instrument.query({"project_id": project_id}, -> $scope.filterInstruments())

  $scope.pagination = current: 1

  $scope.getQuestionsPerPage = (pageNumber) ->
    $scope.questions = Question.query({"project_id": $scope.project_id, "instrument_id": $scope.instrument_id, "page": pageNumber})

  $scope.filterInstruments = () ->
    $scope.instrument = filterFilter($scope.instruments, id: $scope.instrument_id, true)[0]
    $scope.totalQuestions = $scope.instrument.question_count

  $scope.sortableOptions = {
    cursor: 'move',
    handle: '.move-question',
    axis: 'y',
    stop: (e, ui) -> $scope.updateAndSaveQuestionNumbers()
  }

  $scope.editQuestion = (question) ->
    $scope.$broadcast('EDIT_QUESTION', question.id)
    $scope.edit_question = question
    $scope.edit_question.project_id = $scope.project_id
    $scope.edit_question.instrument_id = $scope.instrument_id

  $scope.newQuestion = (currentQuestion) ->
    question = new Question()
    question.project_id = $scope.project_id
    question.instrument_id = $scope.instrument_id
    question.question_identifier = "q_#{question.project_id}_#{question.instrument_id}_#{$scope.uniqueId()}"
    if currentQuestion == null
        question.number_in_instrument = $scope.questions.length + 1
        $scope.questions.push(question)
    else
        question.number_in_instrument = currentQuestion.number_in_instrument + 1
        $scope.questions.splice($scope.questions.indexOf(currentQuestion) + 1, 0, question)
    $scope.edit_question = question
    indexOfChange = $scope.questions.indexOf(question)
    for qst in $scope.questions
        if $scope.questions.indexOf(qst) > indexOfChange
            qst.number_in_instrument = qst.number_in_instrument + 1

  $scope.saveQuestionSuccess = (data, headers) ->
    $scope.$broadcast('SAVE_QUESTION', data.id)
    $scope.edit_question = null

  $scope.saveQuestionFailure = (result, headers) ->
    angular.forEach result.data.errors, (error, field) ->
      alert error

  $scope.saveQuestion = ->
    if $scope.edit_question.id
      $scope.edit_question.$update({},
        (data, headers) -> $scope.saveQuestionSuccess(data, headers),
        (result, headers) -> $scope.saveQuestionFailure(result, headers)
      )
    else
      $scope.edit_question.$save({},
        (data, headers) -> $scope.saveQuestionSuccess(data, headers),
        (result, headers) -> $scope.saveQuestionFailure(result, headers)
      )
    $scope.edit_question = null

  $scope.cancelQuestion = ->
    $scope.$broadcast('CANCEL_QUESTION')
    $scope.edit_question = null

  $scope.toggleSelection = (question) ->
    if $scope.questionSelected(question)
      $scope.selectedQuestions.splice($scope.selectedQuestions.indexOf(question), 1)
    else
      $scope.selectedQuestions.push question

  $scope.questionSelected = (question) ->
    question in $scope.selectedQuestions

  $scope.deleteQuestion = (question) ->
    if confirm("Are you sure you want to delete this question?")
      question.project_id = $scope.project_id
      question.$delete({},
        (data) ->
          question.id = null
        ,
        (data) ->
          alert "Failed to delete question"
        )
      $scope.questions.splice($scope.questions.indexOf(question), 1)
      $scope.updateQuestionNumbers()


  $scope.uniqueId = ->
    new Date().getTime().toString(36).split("").reverse().join("")

  $scope.questionsBefore = (question) ->
    if $scope.all_questions.length == 0
        $scope.questions.slice(0, question.number_in_instrument - 1)
    else
        $scope.all_questions.slice(0, (question.number_in_instrument - 1))

  $scope.questionsAfter = (question) ->
    if (question?)
      $scope.all_questions.slice(question.number_in_instrument, $scope.all_questions.length)

  $scope.questionTypes = ->
    <%= Settings.question_types %>

  $scope.questionTypesWithOptions = (questionType)->
    questionType in <%= Settings.question_with_options %>

  $scope.questionTypesWithImages = (questionType)->
    questionType in <%= Settings.question_with_images %>

  $scope.questionTypesWithMultipleSkipPatterns = (questionType) ->
    questionType in <%= Settings.question_with_multiple_skips %>

  $scope.repositionQuestion = (question) ->
    question.project_id = $scope.project_id
    question.$update({},
      () ->
        $scope.questions = $scope.questions.filter (q) -> q isnt question
        if $scope.questionOnPage(question)
          new_index = question.number_in_instrument - 1 - (($scope.current_page - 1) * $scope.questions_per_page)
          $scope.questions.splice(new_index, 0, question)
        $scope.updateQuestionNumbers()
    )

  $scope.updateQuestionNumbers = ->
    offset = ($scope.current_page - 1) * $scope.questions_per_page
    angular.forEach $scope.questions, (question, index) ->
      question.number_in_instrument = offset + index + 1

  $scope.updateAndSaveQuestionNumbers = ->
    offset = ($scope.current_page - 1) * $scope.questions_per_page
    angular.forEach $scope.questions, (question, index) ->
      question.number_in_instrument = offset + index + 1
      if question.id and $scope.questionOnPage(question)
        question.project_id = $scope.project_id
        question.$update()

  $scope.questionOnPage = (question) ->
    first_number = $scope.questions[0].number_in_instrument
    last_number = $scope.questions[$scope.questions.length - 1].number_in_instrument
    question.number_in_instrument >= first_number and question.number_in_instrument <= last_number

  $scope.searchItem = () ->
    if $scope.searchText is ""
      $scope.getQuestionsPerPage($scope.current_page)
    else
      $scope.questions = filterFilter($scope.all_questions, $scope.searchText)

]
