App.controller 'QuestionsCtrl', ['$scope', 'Question', ($scope, Question) ->
  $scope.questions = []
  $scope.selectedQuestions = []
  $scope.all_questions = []
  $scope.pages = []
  $scope.questions_per_page = 10.0
  $scope.current_page = 1
  $scope.init = (project_id, instrument_id) ->
    $scope.project_id = project_id
    $scope.current_page = 1
    $scope.instrument_id = instrument_id
    $scope.questions = Question.query({"project_id": project_id, "instrument_id": instrument_id, "page": $scope.current_page})
    $scope.all_questions = Question.query({"project_id": project_id, "instrument_id": instrument_id}, -> $scope.createPages())

  $scope.getQuestions = () ->
    $scope.questions = Question.query({"project_id": $scope.project_id, "instrument_id": $scope.instrument_id, "page": $scope.current_page})

  $scope.sortableOptions = {
    cursor: 'move',
    handle: '.move-question',
    axis: 'y',
    stop: (e, ui) -> $scope.updateQuestionNumbers()
  }

  $scope.updateQuestionNumbers = ->
    offset = ($scope.current_page - 1) * $scope.questions_per_page
    angular.forEach $scope.questions, (question, index) ->
      question.number_in_instrument = offset + index + 1
      if question.id
        question.project_id = $scope.project_id
        question.$update()
    start_index = $scope.questions[$scope.questions.length - 1].number_in_instrument
    angular.forEach $scope.all_questions, (question, index) ->
      if question.number_in_instrument >= start_index and not $scope.lastQuestion(question)
        question.number_in_instrument = index + 1
        if question.id
          question.project_id = $scope.project_id
          question.$update()
  
  $scope.editQuestion = (question) ->
    $scope.$broadcast('EDIT_QUESTION', question.id)
    $scope.edit_question = question
    $scope.edit_question.project_id = $scope.project_id
    $scope.edit_question.instrument_id = $scope.instrument_id

  $scope.newQuestionNumber = ->
    if $scope.current_page > 1
      (($scope.current_page - 1) * $scope.questions_per_page) + $scope.questions.length + 1
    else
      $scope.questions.length + 1

  $scope.newQuestion = ->
    question = new Question()
    question.project_id = $scope.project_id
    question.instrument_id = $scope.instrument_id
    question.number_in_instrument = $scope.newQuestionNumber()
    question.question_identifier = "q_#{question.project_id}_#{question.instrument_id}_#{$scope.uniqueId()}"
    $scope.questions.push(question)
    $scope.edit_question = question
    $scope.all_questions.splice(question.number_in_instrument - 1, 0, question)

  $scope.saveQuestionSuccess = (data, headers) ->
    $scope.$broadcast('SAVE_QUESTION', data.id)
    $scope.updateQuestionNumbers()
    $scope.edit_question = null

  $scope.saveQuestionFailure = (result, headers) ->
    angular.forEach result.data.errors, (error, field) ->
      alert error

  $scope.saveQuestion = ->
    if $scope.edit_question.id
      $scope.edit_question.$update({},
        (data, headers) -> $scope.saveQuestionSuccess(data, headers),
        (result, headers) -> $scope.saveQuestionFailure(result, headers)
      )
    else
      $scope.edit_question.$save({},
        (data, headers) -> $scope.saveQuestionSuccess(data, headers),
        (result, headers) -> $scope.saveQuestionFailure(result, headers)
      )

  $scope.cancelQuestion = ->
    $scope.$broadcast('CANCEL_QUESTION')
    $scope.edit_question = null

  $scope.toggleSelection = (question) ->
    if $scope.questionSelected(question)
      $scope.selectedQuestions.splice($scope.selectedQuestions.indexOf(question), 1)
    else
      $scope.selectedQuestions.push question

  $scope.questionSelected = (question) ->
    question in $scope.selectedQuestions

  $scope.deleteQuestion = (question) ->
    if confirm("Are you sure you want to delete this question?")
      question.project_id = $scope.project_id
      question.$delete({},
        (data) ->
          question.id = null
          $scope.all_questions.splice($scope.all_questions.indexOf(question), 1)
          $scope.questions.splice($scope.questions.indexOf(question), 1)
          $scope.updateQuestionNumbers()
        ,
        (data) ->
          alert "Failed to delete question"
        )

  $scope.uniqueId = ->
    new Date().getTime().toString(36).split("").reverse().join("")

  $scope.questionsBefore = (question) ->
    $scope.questions.slice(0, $scope.questions.indexOf(question))

  $scope.questionsAfter = (question) ->
    $scope.questions.slice($scope.questions.indexOf(question) + 1, $scope.questions.length)

  $scope.questionTypes = ->
    <%= Settings.question_types %>

  $scope.questionTypesWithOptions = (questionType)->
    questionType in <%= Settings.question_with_options %>

  $scope.questionTypesWithImages = (questionType)->
    questionType in <%= Settings.question_with_images %>

  $scope.setPage = (new_page) ->
    new_page = 1 if new_page < 1

    $scope.current_page = new_page
    $scope.getQuestions()
 
  $scope.createPages = () ->
    $scope.pages = [1..Math.ceil($scope.all_questions.length/$scope.questions_per_page)]

  $scope.repositionQuestion = (question) ->
    question.project_id = $scope.project_id
    if question.number_in_instrument > $scope.all_questions.length
      question.number_in_instrument = $scope.all_questions.length
    question.$update({},
      (data) ->
         if $scope.questionNotOnPage(question)
           $scope.questions.splice($scope.questions.indexOf(question), 1)
           $scope.all_questions.splice(question.number_in_instrument - 1, 0, question)
         else
           $scope.questions.splice($scope.questions.indexOf(question), 1)
           $scope.questions.splice(question.number_in_instrument - 1, 0, question)
         $scope.updateQuestionNumbers()
    )

  $scope.lastQuestion = (question) ->
    question === $scope.questions[$scope.questions.length - 1]

  $scope.firstQuestion = (question) ->
    question === $scope.questions[0]

  $scope.questionNotOnPage = (question) ->
    question.number_in_instrument > $scope.lastQuestion(question).number_in_instrument or question.number_in_instrument < $scope.firstQuestion(question).number_in_instrument
]
